import time
import random

def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]

        merge_sort(left_half)
        merge_sort(right_half)

        i = j = k = 0
        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                arr[k] = left_half[i]
                i += 1
            else:
                arr[k] = right_half[j]
                j += 1
            k += 1

        while i < len(left_half):
            arr[k] = left_half[i]
            i += 1
            k += 1

        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1

def gerar_lista_aleatoria(tamanho):
    return [random.randint(1, 10000000) for _ in range(tamanho)]

def rodar_testes():
    tamanhos = [10, 100, 1000, 5000, 10000, 50000, 100000]

    print("--- Testando Merge Sort ---")
    for tamanho in tamanhos:
        dados = gerar_lista_aleatoria(tamanho)
        start_time = time.perf_counter()
        merge_sort(dados)
        end_time = time.perf_counter()
        tempo_execucao = end_time - start_time
        print(f"  Tamanho {tamanho}: {tempo_execucao:.6f} segundos")

if __name__ == "__main__":
    rodar_testes()
